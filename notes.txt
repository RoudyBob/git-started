// git
// version control system used to track any file. Most notably used in development
// Git commits are checksumed using SHA-1 meaning no corrupt files without knowing about it.

// Three States of Git
// - modified
// file changed, but it has not been committed (ex: normal work, or when saving)
// - staging
// marking the files that are going into the next commit snapshot (utilizing git add <>)
// - commit
// changes are being stored in the local database (.git?) (such as vm box, docker, computer, etc.)

// list hidden files
ls -a (or ls -la)

// remove .git
rm -rf .git

// start version tracking/control
// git init
// creates a new project

// stage the files for a commit
// git add < file or files >

// use git status to check on file staging

// creating a branch
// git branch will show you your branches
// git branch <name>
// git checkout -b develop

// switch between branches
// use git checkout <name>

// delete a branch
// git branch -D develop

// git reset
// you can git reset to undo a change that's been added but not committed
// changes that you've added will be backed out
// git reset --hard <commit> moves the HEAD to the previous commit

// git revert
// this allows you to revert a change but it's just another commit without your change
// you can revert back to the previous one but you can also revert to previous commit (cherry pick)

// to add remote branch
// check if any exist using git remove -v
// run git remote add <name of remote stream> repoURL

